import Head from 'next/head'
import { useState, useEffect } from "react";
import { db } from "../firebase";
import {
    ref,
    uploadBytes,
    getDownloadURL,
    listAll,
    list,
} from "firebase/storage";
import {
    collection,
    getDocs,
    addDoc,
    updateDoc,
    deleteDoc,
    doc,
} from "firebase/firestore";
import { storage } from "../firebase";
import { v4 } from "uuid";

// const inter = Inter({ subsets: ['latin'] })

export default function Home() {

    const productsRef = collection(db, "products");

    const [Name, setName] = useState("");
    const [file, setFile] = useState(null);
    // file upload new technique

    const createProduct = async (e) => {
        if (file == null || Name == null) {
            alert("No file selected")
            return;
        }
        const imageRef = ref(storage, `products/${Name + v4()}`);
        await uploadBytes(imageRef, file).then((snapshot) => {
            getDownloadURL(snapshot.ref)
                .then(async (url) => {
                    await addDoc(productsRef, { name: Name, productUrl: url }).then(() => console.log(url));
                })
        });
        setName("")
    };

    const [Category, setCategory] = useState("");
    const [FilesMulti, setFilesMulti] = useState(null);

    const MultipleProducts = async () => {
        if (FilesMulti == null || Category == null) {
            alert("No file selected")
            return;
        }
        for (let i = 0; i < FilesMulti.length; i++) {
            const imageRef2 = ref(storage, `${Category}/${FilesMulti[i].name + v4()}`);
            const eachProducts = collection(db, `${Category}`);
            await uploadBytes(imageRef2, FilesMulti[i]).then((snapshot) => {
                getDownloadURL(snapshot.ref)
                    .then(async (url) => {
                        await addDoc(eachProducts, { name: Category  ,productUrl: url }).then(() => console.log(url));
                    })
            });
        };
        setCategory("")
    };

    return (
        <>
            <Head>
                <title>Create Next App</title>
                <meta name="description" content="Generated by create next app" />
                <meta name="viewport" content="width=device-width, initial-scale=1" />
                <link rel="icon" href="/favicon.ico" />
            </Head>
            <main className="bg-gray-50 dark:bg-gray-900">
                <div className="bg-black h-screen flex flex-col md:flex-row">

                    {/* left side */}
                    <section class="bg-gray-50 dark:bg-gray-900 w-full md:w-1/2">
                        <div class="flex flex-col items-center justify-center px-6 py-8 mx-auto md:h-screen lg:py-0">

                            <div class="w-full bg-white rounded-lg shadow dark:border md:mt-0 sm:max-w-md xl:p-0 dark:bg-gray-800 dark:border-gray-700">
                                <div class="p-6 space-y-4 md:space-y-6 sm:p-8">
                                    <h1 class="text-xl font-bold leading-tight tracking-tight text-gray-900 md:text-2xl dark:text-white">
                                        Upload SINGLE file
                                    </h1>
                                    <form class="space-y-4 md:space-y-6" action="#">
                                        <div>
                                            <label for="email" class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Name</label>
                                            <input type="text" name="name" id="name" value={Name} onChange={(e) => {
                                                setName(e.target.value);
                                            }} class="bg-gray-50 border border-gray-300 text-gray-900 sm:text-sm rounded-lg focus:ring-primary-600 focus:border-primary-600 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500" placeholder="type product name" required="" />
                                        </div>
                                        <div>
                                            <label for="password" class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">File</label>
                                            <input type="file" name="image" id="image" value={null} onChange={(e) => setFile(e.target.files[0])} class="bg-gray-50 border border-gray-300 text-gray-900 sm:text-sm rounded-lg focus:ring-primary-600 focus:border-primary-600 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500" required="" />
                                        </div>

                                        <button type="button" onClick={createProduct} class="w-full text-white bg-primary-600 hover:bg-primary-700 focus:ring-4 focus:outline-none focus:ring-primary-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center dark:bg-primary-600 dark:hover:bg-primary-700 dark:focus:ring-primary-800">Upload</button>

                                    </form>
                                </div>
                            </div>
                        </div>
                    </section>


                    {/* right side */}
                    <section class="bg-gray-50 dark:bg-gray-900 w-full md:w-1/2">
                        <div class="flex flex-col items-center justify-center px-6 py-8 mx-auto md:h-screen lg:py-0">

                            <div class="w-full bg-white rounded-lg shadow dark:border md:mt-0 sm:max-w-md xl:p-0 dark:bg-gray-800 dark:border-gray-700">
                                <div class="p-6 space-y-4 md:space-y-6 sm:p-8">
                                    <h1 class="text-xl font-bold leading-tight tracking-tight text-gray-900 md:text-2xl dark:text-white">
                                        Upload MULTIPLE files
                                    </h1>
                                    <form class="space-y-4 md:space-y-6" action="#">
                                        <div>
                                            <label for="email" class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Category</label>
                                            <input type="text" name="name" id="name" value={Category} onChange={(e) => {
                                                setCategory(e.target.value);
                                            }} class="bg-gray-50 border border-gray-300 text-gray-900 sm:text-sm rounded-lg focus:ring-primary-600 focus:border-primary-600 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500" placeholder="type product name" required="" />
                                        </div>
                                        <div>
                                            <label for="password" class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">File</label>
                                            <input type="file" name="image" id="image" multiple onChange={(e) => setFilesMulti(e.target.files)} class="bg-gray-50 border border-gray-300 text-gray-900 sm:text-sm rounded-lg focus:ring-primary-600 focus:border-primary-600 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500" required="" />
                                        </div>

                                        <button type="button" onClick={MultipleProducts} class="w-full text-white bg-primary-600 hover:bg-primary-700 focus:ring-4 focus:outline-none focus:ring-primary-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center dark:bg-primary-600 dark:hover:bg-primary-700 dark:focus:ring-primary-800">Upload</button>

                                    </form>
                                </div>
                            </div>
                        </div>
                    </section>

                </div>

            </main>
        </>
    )
}
